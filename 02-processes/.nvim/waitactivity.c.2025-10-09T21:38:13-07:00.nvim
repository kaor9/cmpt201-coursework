#define _POSIX_C_SOURCE 200809L
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/wait.h>
#include <unistd.h>

int main() {

  pid_t pid = fork();
  int wstatus = 0;

  if (pid == 0) {
    char buf[100] = "hajfjdhakfhkdahsfjkhdsakjfhkdksj";
    read(STDIN_FILENO, buf, 99);
    char *args[10];
    int argc = 0;
    char *saveptr;
    char *ret = strtok_r(buf, " \n", &saveptr);
    while (ret != NULL) {
      args[argc++] = ret;
      ret = strtok_r(NULL, " \n", &saveptr);
    }
    args[argc] = NULL;
    execvp(args[0], args);
  } else {
    if (waitpid(pid, &wstatus, 0) == -1) {
      perror("waitpid");
      exit(EXIT_FAILURE);
    }

    if (WIFEXITED(wstatus)) {
      printf("Child done with exit status: %d\n", WEXITSTATUS(wstatus));
    } else {
      printf("Did not exit normally");
    }
  }

  return 0;
}
